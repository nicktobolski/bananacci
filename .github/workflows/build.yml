name: Build & Release (Bananacci)

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]   # create a GitHub Release on version tags
  pull_request:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    env:
      APP_NAME: BananacciVolume
      SRC: BananacciVolume.ahk
      OUT_DIR: dist

    steps:
      - name: Check out
        uses: actions/checkout@v4

      # Compile .ahk â†’ .exe with NO compression (helps AV heuristics)
      - name: Compile with Ahk2Exe (no compression)
        uses: benmusson/ahk2exe-action@v1
        with:
          in: ${{ env.SRC }}
          out: ${{ env.OUT_DIR }}\\${{ env.APP_NAME }}.exe
          target: x64
          compression: none
          # If you add an icon file to your repo (e.g., assets/icon.ico), uncomment:
          # icon: assets/icon.ico
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: List build outputs
        shell: pwsh
        run: Get-ChildItem -Recurse $env:OUT_DIR | Format-Table -AutoSize

      # Package a ZIP (ship the zip, not the raw exe)
      - name: Package ZIP
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force $env:OUT_DIR | Out-Null
          $zipPath = Join-Path $env:OUT_DIR "${{ env.APP_NAME }}-${{ github.ref_name }}.zip"
          if (!(Test-Path $zipPath)) {
            Compress-Archive -Path `
              "$env:OUT_DIR\${{ env.APP_NAME }}.exe", `
              "README.md","LICENSE" `
              -DestinationPath $zipPath
          }
          Write-Host "ZIP at $zipPath"

      # Upload artifacts for PRs & branch pushes (CI visibility)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-build
          path: |
            ${{ env.OUT_DIR }}/${{ env.APP_NAME }}.exe
            ${{ env.OUT_DIR }}/${{ env.APP_NAME }}-${{ github.ref_name }}.zip

      # Create a GitHub Release on tags, upload ONLY the ZIP
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            ${{ env.OUT_DIR }}/${{ env.APP_NAME }}-${{ github.ref_name }}.zip
